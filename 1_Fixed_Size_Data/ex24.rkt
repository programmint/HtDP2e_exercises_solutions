; 24
(define (==> x y)
  (or (not x) y))

  (==> #true #false)
  ==;(or (not #true) #false)
  ==;(or #false #false)
  ==
  #false

; 定义==>这个函数，本地总是运行不了，这次也不例外。

; 贴一段 AI 的解释
  ; 在 Racket 语言中，==> 并不是一个内置的操作符或函数，因此你不能直接使用它。
  ; Racket 的函数定义通常使用 define 关键字，并且函数名应该是有效的 Racket 标识符。
  ; 如果你尝试定义一个名为 ==> 的函数，可能会遇到错误，因为 ==> 可能不是一个有效的标识符，
  ; 或者它可能与 Racket 中已有的语法或函数冲突。